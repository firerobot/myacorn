package com.myacorn.exercise;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;

public class HelloWorld {

	public static void main (String[] args) {
		//System.out.println("Hello World");
		treeMap();
	}
	
	public static void treeMap() {
		List<String> inputList = Arrays.asList
				("theta", "delta", "omega", "beta", "alpha", "zeta", "pi");

		TreeMap<String, Integer> treeMap = new TreeMap<String, Integer>(); 
		for (int i = 0; i < inputList.size(); i++) {
			treeMap.put(inputList.get(i), i);
		}
		
		Iterator<String> iter = treeMap.navigableKeySet().iterator();
		while (iter.hasNext()) {
			System.out.println(iter.next());
		}
		System.out.println("Greatest key <= to gamma is " + 
			treeMap.floorKey("gamma"));
	}

/*	
	public static <K,V extends Comparable<? super V>>
	SortedSet<Map.Entry<K,V>> entriesSortedByValues(Map<K,V> map) {
	    SortedSet<Map.Entry<K,V>> sortedEntries = new TreeSet<Map.Entry<K,V>>(
	        new Comparator<Map.Entry<K,V>>() {
	            @Override public int compare(Map.Entry<K,V> e1, Map.Entry<K,V> e2) {
	                int res = e1.getValue().compareTo(e2.getValue());
	                return res != 0 ? res : 1;
	            }
	        }
	    );
	    sortedEntries.addAll(map.entrySet());
	    return sortedEntries;
	}
*/
}

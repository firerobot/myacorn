package com.myacorn.exercise;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.List;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.contrib.java.lang.system.StandardOutputStreamLog;

public class HelloWorldTest {
	@Rule
	public final StandardOutputStreamLog log = new StandardOutputStreamLog();
	
	private List<String> inputList;
	
	@Before
	public void initialise() {
		inputList = Arrays.asList
				("theta", "delta", "omega", "beta", "alpha", "zeta", "pi", "alpha");
	}
	
	@Test
	public void test() {
		String[] args = new String[] {"test"};
		HelloWorld.main(args);
		assertEquals("Hello World\r\n", log.getLog());
	}
	
	@Test
	public void testTreeMapSize() {
		//tree map only contains the unique
		assertEquals(7, HelloWorld.buildTreeMap(inputList).size());
	}
	
	@Test
	public void testFindGreatestKeyLTEWithNoMatchingKey() {
		assertEquals("delta", HelloWorld.findGreatestKeyLTE(inputList, "gamma"));
	}
	
	@Test
	public void testFindGreatestKeyLTEWithMatchingKey() {
		assertEquals("pi", HelloWorld.findGreatestKeyLTE(inputList, "pi"));
	}
	
	@Test
	public void testFindLeastKeyGTEWithNoMatchingKey() {
		assertEquals("omega", HelloWorld.findLeastKeyGTE(inputList, "gamma"));
	}

	@Test
	public void testFindLeastKeyGTEWithMatchingKey() {
		assertEquals("zeta", HelloWorld.findLeastKeyGTE(inputList, "zeta"));
	}
	

}
